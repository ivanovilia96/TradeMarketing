   docker-compose up ( в конце появтися надпись You can work on http://localhost:8081/ (это внешний порт, проверить можно с помощь ссылок внизу))
   (таблицы и бд автоматически создадутся, если они отсутствуют)

   -> запуск тестов происходит вместе с запуском докера (coverage: 70.8% of statements текст, api проверил, данные в бд\из бд проверил, рассчеты и тд, там немного не так как по умному задумано, т.к. , как миграции\mock на докере сделать пока не доконца разобрался) 
 тестировал REST на https://reqbin.com/ (online REST), +  разрешил всем по CORS (https://extendsclass.com/rest-client-online.html - это проверить тут можно)
 Список API - 

    - добавить данные в статистику
    /statistics -> PUT
        Параметры \ пример : {
                     "date" : "2001-12-31" ,  - string - предпологаем что на фронтенде преобразуют данные к нужному формату
	                  "views" : 111,           - number (int)
	                  "clicks" : 100,          - number (int)
	                  "cost" :  "1000.00"      - string  - целое - рубли, дробь - копейки ( валидация на копейки присутствует )
                    }
                -> views, clicks и cost - опциональные
         пример возвращаемого значения : {
                                             "text": "Запись добавлена успешно",
                                             "status": 202,
                                             "id": 223
                                          }       

    - получить список статистических данных 
   /statistics-from={fromDate}-to={toDate}-sortField={sortField}  - GET        
   fromDate - с какой даты (включительно )
   toDate - по какую дату (включительно ) 
   sortField - поле по которому будем сортировать
   пример запроса: http://localhost:8081/statistics-from=2001-12-30,to=2001-12-32,sortField=date
      пример возвращаемого значения : [{
                                           "date": "2001-12-31" ,  -> string - дата статистики
                                           "views": 111, ->int - число просмотров 
                                           "clicks": 100, ->int - число кликов
                                           "cost": "1000.00", -> string стоимость кликов
                                           "Cpc": "10.00", -> string стоимость 1 клика
                                           "Cpm": "9009.01" -> string средняя стоимость 1000 показов
                                       }]

    - удалить всю статистику  (в mySql есть функция safe updates, её нужно отключить если включена)
    /statistics - DELETE
    пример ответа : {
         "message": "статистика успешно очищена"
      }                                   

   